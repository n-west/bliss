# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Build and upload python package

on:
  release:
    types: [published]
  push:
    branches:
      - 'releases/**'
      - 'docs-and-conda'

permissions:
  contents: read

jobs:
  build_wheels:
    name: Build wheels for cuda ${{ matrix.cuda_ver }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cuda_ver: ['none', '11.4', '12.4']

    steps:
      - uses: actions/checkout@v3

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'

      - name: Upgrade pip
        run: |
          python3 -m pip install --upgrade pip

      - name: Install cibuildwheel
        run: |
          python3 -m pip install cibuildwheel==2.19.2

      - name: Build wheels for CPython
        run: |
          # For cuda versions, rename the project with -cudaMAJORVER
          if [[ "${{ matrix.cuda_ver }}" != "none" ]]; then
            if [[ "${{ matrix.cuda_ver }}" == 11.* ]]; then
              sed -i "s/name = \"dedrift\"/name = \"dedrift-cuda11x\"/g" pyproject.toml
            elif [[ "${{ matrix.cuda_ver }}" == 12.* ]]; then
              sed -i "s/name = \"dedrift\"/name = \"dedrift-cuda12x\"/g" pyproject.toml
            fi
            # sed -i "s/name = \"dedrift\"/name = \"dedrift-cuda${{ matrix.cuda_ver }}\"/g" pyproject.toml
          fi
          python3 -m cibuildwheel --output-dir dist/
        env:
          CUDA_VER: ${{ matrix.cuda_ver }}

      - uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.cuda_ver }}
          path: dist



  upload:
    name: Upload to PyPi and create release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        cuda_ver: ['none', '11.4', '12.4']
    needs: [build_wheels]
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: dist-${{ matrix.cuda_ver }}
          path: dist

      - name: Publish package
        uses: pypa/gh-action-pypi-publish@release/v1.8
        with:
          repository-url: https://test.pypi.org/legacy/
          skip-existing: False
          user: __token__
          password: ${{ secrets.TEST_PYPI_API_TOKEN }}
